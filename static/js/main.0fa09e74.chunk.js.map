{"version":3,"sources":["Components/Column.js","Components/Row.js","App.js","serviceWorker.js","index.js"],"names":["symbolsMap","2","0","1","Column","props","handleNewMove","bind","e","this","active","document","querySelector","style","display","innerHTML","marking","onNewMove","parseInt","target","id","className","onClick","String","fromCharCode","Component","Row","cols","i","row","boardState","push","key","patterns","AIScore","App","state","Array","fill","turn","mode","handleReset","handleModeChange","processBoard","makeAIMove","won","forEach","pattern","firstMark","marks","filter","mark","index","includes","length","getElementById","parentNode","background","setState","emptys","scores","score","xCount","oCount","p","maxIndex","reduce","maxVal","currentVal","currentIndex","preventDefault","querySelectorAll","el","prevState","slice","concat","getAttribute","rows","href","role","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fa09e74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nvar symbolsMap = {\r\n  2: [\"marking\", \"32\"],\r\n  0: [\"marking marking-x\", 9587],\r\n  1: [\"marking marking-o\", 9711]\r\n};\r\n\r\nclass Column extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewMove = this.handleNewMove.bind(this);\r\n  }\r\n  \r\n  handleNewMove(e) {\r\n    if (!this.props.active) {\r\n      document.querySelector(\"#message1\").style.display = \"none\";\r\n      document.querySelector(\"#message2\").innerHTML =\r\n        \"Game is already over! Reset if you want to play again.\";\r\n      document.querySelector(\"#message2\").style.display = \"block\";\r\n      return false;\r\n    } else if (this.props.marking === 2)\r\n      this.props.onNewMove(parseInt(e.target.id));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\" onClick={this.handleNewMove}>\r\n        <div className={symbolsMap[this.props.marking][0]} id={this.props.id}>\r\n          {String.fromCharCode(symbolsMap[this.props.marking][1])}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Column;","import React, { Component } from \"react\";\r\nimport Column from \"./Column\";\r\n\r\nclass Row extends Component {\r\n \r\n\r\n  render() {\r\n    const cols = [];\r\n    for (var i = 0; i < 3; i++) {\r\n      var id = this.props.row * 3 + i;\r\n      var marking = this.props.boardState[id];\r\n      cols.push(\r\n        <Column\r\n          key={id + \"-\" + marking}\r\n          id={id + \"-\" + marking}\r\n          marking={marking}\r\n          onNewMove={this.props.onNewMove}\r\n          active={this.props.active}\r\n        />\r\n      );\r\n    }\r\n    return <div className=\"row\">{cols}</div>;\r\n  }\r\n}\r\n\r\nexport default Row;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Row from \"./Components/Row.js\";\r\n\r\nvar symbolsMap = {\r\n  2: [\"marking\", \"32\"],\r\n  0: [\"marking marking-x\", 9587],\r\n  1: [\"marking marking-o\", 9711]\r\n};\r\n\r\nvar patterns = [\r\n  //horizontal\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  //vertical\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  //diagonal\r\n  [0, 4, 8],\r\n  [2, 4, 6]\r\n];\r\n\r\nvar AIScore = { 2: 1, 0: 2, 1: 0 };\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardState: new Array(9).fill(2),\r\n      turn: 0,\r\n      active: true,\r\n      mode: \"AI\"\r\n    };\r\n    this.handleNewMove = this.handleNewMove.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.handleModeChange = this.handleModeChange.bind(this);\r\n    this.processBoard = this.processBoard.bind(this);\r\n    this.makeAIMove = this.makeAIMove.bind(this);\r\n  }\r\n\r\n  processBoard() {\r\n    var won = false;\r\n    patterns.forEach(pattern => {\r\n      var firstMark = this.state.boardState[pattern[0]];\r\n\r\n      if (firstMark !== 2) {\r\n        var marks = this.state.boardState.filter((mark, index) => {\r\n          return pattern.includes(index) && mark === firstMark; //looks for marks matching the first in pattern's index\r\n        });\r\n\r\n        if (marks.length === 3) {\r\n          document.querySelector(\"#message1\").innerHTML =\r\n            String.fromCharCode(symbolsMap[marks[0]][1]) + \" wins!\";\r\n          document.querySelector(\"#message1\").style.display = \"block\";\r\n          pattern.forEach(index => {\r\n            var id = index + \"-\" + firstMark;\r\n            document.getElementById(id).parentNode.style.background = \"#d4edda\";\r\n          });\r\n          this.setState({ active: false });\r\n          won = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!this.state.boardState.includes(2) && !won) {\r\n      document.querySelector(\"#message2\").innerHTML = \"Game Over - It's a draw\";\r\n      document.querySelector(\"#message2\").style.display = \"block\";\r\n      this.setState({ active: false });\r\n    } else if (this.state.mode === \"AI\" && this.state.turn === 1 && !won) {\r\n      this.makeAIMove();\r\n    }\r\n  }\r\n\r\n  makeAIMove() {\r\n    var emptys = [];\r\n    var scores = [];\r\n    this.state.boardState.forEach((mark, index) => {\r\n      if (mark === 2) emptys.push(index);\r\n    });\r\n\r\n    emptys.forEach(index => {\r\n      var score = 0;\r\n      patterns.forEach(pattern => {\r\n        if (pattern.includes(index)) {\r\n          var xCount = 0;\r\n          var oCount = 0;\r\n          pattern.forEach(p => {\r\n            if (this.state.boardState[p] === 0) xCount += 1;\r\n            else if (this.state.boardState[p] === 1) oCount += 1;\r\n            score += p === index ? 0 : AIScore[this.state.boardState[p]];\r\n          });\r\n          if (xCount >= 2) score += 10;\r\n          if (oCount >= 2) score += 20;\r\n        }\r\n      });\r\n      scores.push(score);\r\n    });\r\n\r\n    var maxIndex = 0;\r\n    scores.reduce(function(maxVal, currentVal, currentIndex) {\r\n      if (currentVal >= maxVal) {\r\n        maxIndex = currentIndex;\r\n        return currentVal;\r\n      }\r\n      return maxVal;\r\n    });\r\n    this.handleNewMove(emptys[maxIndex]);\r\n  }\r\n\r\n  handleReset(e) {\r\n    if (e) e.preventDefault();\r\n    document\r\n      .querySelectorAll(\".alert\")\r\n      .forEach(el => (el.style.display = \"none\"));\r\n    this.setState({\r\n      boardState: new Array(9).fill(2),\r\n      turn: 0,\r\n      active: true\r\n    });\r\n  }\r\n  handleNewMove(id) {\r\n    this.setState(\r\n      prevState => {\r\n        return {\r\n          boardState: prevState.boardState\r\n            .slice(0, id)\r\n            .concat(prevState.turn)\r\n            .concat(prevState.boardState.slice(id + 1)),\r\n          turn: (prevState.turn + 1) % 2\r\n        };\r\n      },\r\n      () => {\r\n        this.processBoard();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleModeChange(e) {\r\n    e.preventDefault();\r\n    if (e.target.getAttribute(\"href\").includes(\"AI\")) {\r\n      e.target.style.background = \"#d4edda\";\r\n      document.querySelector(\"#twop\").style.background = \"none\";\r\n      this.setState({ mode: \"AI\" });\r\n      this.handleReset(null);\r\n    } else if (e.target.getAttribute(\"href\").includes(\"2P\")) {\r\n      e.target.style.background = \"#d4edda\";\r\n      document.querySelector(\"#ai\").style.background = \"none\";\r\n      this.setState({ mode: \"2P\" });\r\n      this.handleReset(null);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const rows = [];\r\n    for (var i = 0; i < 3; i++)\r\n      rows.push(\r\n        <Row\r\n          row={i}\r\n          boardState={this.state.boardState}\r\n          onNewMove={this.handleNewMove}\r\n          active={this.state.active}\r\n          key={this.key}\r\n        />\r\n      );\r\n    return (\r\n      <div>\r\n        <div className=\"container jumbotron\" id=\"container\">\r\n          <h3>TIC TAC TOE</h3>\r\n          <p>\r\n            <a href=\"./?AI\" onClick={this.handleModeChange} id=\"ai\">\r\n              Versus AI\r\n            </a>{\" \"}\r\n            ||\r\n            <a href=\"./?2P\" onClick={this.handleModeChange} id=\"twop\">\r\n              {\" \"}\r\n              2 Players\r\n            </a>{\" \"}\r\n            ||\r\n            <a href=\"#\" onClick={this.handleReset}>\r\n              {\" \"}\r\n              Reset board\r\n            </a>\r\n          </p>\r\n          <p>{String.fromCharCode(symbolsMap[this.state.turn][1])}'s turn</p>\r\n          <div className=\"board\">{rows}</div>\r\n          <p className=\"alert alert-success\" role=\"alert\" id=\"message1\"></p>\r\n          <p className=\"alert alert-info\" role=\"alert\" id=\"message2\"></p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}